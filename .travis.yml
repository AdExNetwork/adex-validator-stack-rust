language: rust
# do not run any default scripts coming from `language: rust` (i.e. travis-ci)
script:
install:
# Also don't cache the cargo registry
before_cache:
  - rm -rf /home/travis/.cargo/registry
rust:
  - 1.48.0
os: linux
# Need to cache the whole `.cargo` directory to keep .crates.toml for
# cargo-update to work
cache:
  directories:
    - /home/travis/.cargo
env:
  global:
    - CARGO_MAKE_RUN_CHECK_FORMAT="true"
    - CARGO_MAKE_RUN_CLIPPY="true"

stages:
  - name: run all tests
  - name: release validator
    if: (tag IS present) AND (tag =~ ^validator-v)

jobs:
  fast_finish: true
  include:
    - stage: run all tests
      env:
      - DOCKER_COMPOSE_VERSION=1.27.4

      before_install:
        - sudo rm /usr/local/bin/docker-compose
        - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
        - chmod +x docker-compose
        - sudo mv docker-compose /usr/local/bin
      # @TODO: Maybe run a separate weekly job and use the cached cargo-make from there
      install:
        - which cargo-make || cargo install cargo-make
      script:
        # run docker-compose setting up all required services for tests
        - docker-compose -f docker-compose.ci.yml up -d
        - cargo make ci-flow
      services:
        - docker
    - stage: release validator
      # Disable the default Rust `install` & `script` from Travis
      install:
      script:
        - cargo build -p validator_worker --release --all-features --target x86_64-unknown-linux-gnu
        - cp target/x86_64-unknown-linux-gnu/release/validator_worker $TRAVIS_TAG
      deploy:
        provider: releases
        token: $GITHUB_API_TOKEN
        file: $TRAVIS_BUILD_DIR/$TRAVIS_TAG
        cleanup: false
        draft: true
        on:
          tags: true
          all_branches: true
        edge: true
