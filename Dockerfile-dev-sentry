# Builder
FROM rust:1.48.0 as builder

LABEL maintainer="dev@adex.network"

WORKDIR /usr/src/app

# A hack around the build step that will cache dependencies and make builds faster

RUN mkdir -p primitives/src/ adapter/src/ sentry/src/

# primitives
COPY ./primitives/Cargo.toml ./primitives/Cargo.toml
# RUN touch ./primitives/src/main.rs && echo "pub fn main() {println!(\"cargo:rerun-if-changed=\\\"/tmp/build.rs\\\"\");}" >> ./primitives/src/main.rs
RUN touch ./primitives/src/lib.rs && echo "pub fn main() {println!(\"cargo:rerun-if-changed=\\\"/tmp/build.rs\\\"\");}" >> ./primitives/src/lib.rs

# adapter
COPY ./adapter/Cargo.toml ./adapter/Cargo.toml
COPY ./Cargo.lock ./adapter/Cargo.lock

# RUN touch ./adapter/src/main.rs && echo "fn main() {println!(\"cargo:rerun-if-changed=\\\"/tmp/build.rs\\\"\");}" >> ./adapter/src/main.rs
RUN touch ./adapter/src/lib.rs && echo "pub fn main() {println!(\"cargo:rerun-if-changed=\\\"/tmp/build.rs\\\"\");}" >> ./adapter/src/lib.rs

# sentry
COPY ./sentry/Cargo.toml ./sentry/Cargo.toml
COPY ./Cargo.lock ./sentry/Cargo.lock
RUN touch ./sentry/src/main.rs && echo "fn main() {println!(\"cargo:rerun-if-changed=\\\"/tmp/build.rs\\\"\");}" >> ./sentry/src/main.rs
# RUN touch ./sentry/src/lib.rs && echo "pub fn main() {println!(\"cargo:rerun-if-changed=\\\"/tmp/build.rs\\\"\");}" >> ./sentry/src/lib.rs

# workspace cargo configuration
COPY ./Cargo.lock ./Cargo.lock
RUN touch Cargo.toml && echo "[workspace]\n members = [ 'primitives', 'adapter', 'sentry' ]" >> Cargo.toml

RUN cargo build -p sentry --release

# remove the not needed build artifacts
RUN rm -f target/release/deps/sentry*
RUN rm -f target/release/deps/adapter*
RUN rm -f target/release/deps/primitives*
RUN rm -f target/release/deps/libadapter*
RUN rm -f target/release/deps/libprimitives*
RUN rm -f target/release/deps/libsentry*

COPY . .

# We install the sentry binary with all features in Release mode
# Inlcude the full backtrace for easier debugging

RUN RUST_BACKTRACE=full cargo install --path sentry --all-features

WORKDIR /usr/local/bin

RUN cp $CARGO_HOME/bin/sentry .

FROM rust:1.48.0

RUN apt update && apt-get install -y libssl-dev ca-certificates

# `ethereum` or `dummy`
ENV ADAPTER=

# only applicable if you use the `--adapter ethereum`
ENV KEYSTORE_FILE=
ENV KEYSTORE_PWD=

# Only applicable if you use the `--adapter dummy`
ENV DUMMY_IDENTITY=

# If set it will override the configuration file used
ENV CONFIG=

WORKDIR /usr/local/bin

COPY docs/config/cloudflare_origin.crt /usr/local/share/ca-certificates/

RUN update-ca-certificates

RUN mkdir scripts

COPY ./scripts/sentry-docker ./scripts

COPY --from=builder /usr/local/bin/sentry .

ENTRYPOINT ["./scripts/entrypoint.sh"]

CMD sentry -a ${ADAPTER:-ethereum} \
            ${KEYSTORE_FILE:+-k $KEYSTORE_FILE} \
            ${DUMMY_IDENTITY:+-i $DUMMY_IDENTITY} \
            ${CONFIG}
